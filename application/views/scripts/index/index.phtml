<style>  div#map_container {    display: none;  }</style><script type="text/javascript" src="http://code.jquery.com/jquery-1.7.1.min.js"></script><script type="text/javascript">  $(document).ready(function() {    $("#link_map_show").click(function() {      $('#map_container').slideDown();    });        $('#link_map_hide').click(function() {      $('#map_container').slideUp();    });  });</script><h3>What?</h3><p>  This is a simple application which provides up-to-date coordinates of BorisBikes docking stations  in a form simple to use with your Nokia Symbian-based phone. There are no BorisBikes applications for  Symbian (or at least there weren't any when I got the idea), so that might be handy.</p><h3>Why?</h3><p>  Because the official open feed with locations and availability data has been  <a href="http://adrianshort.co.uk/2011/04/28/boris-says-bye-bye-to-indie-boris-bikes-developers/">closed</a> by TfL.  Alas, we can't get the availability data for free, but there is a way arond for landmarks.</p><?php $config = Config::getConfig(); ?><p>  This application scrapes the landmarks from the JavaScript source used on one of the official pages, particularly on  <noindex><a href="<?php echo $config->source->url; ?>"><?php echo $config->source->url; ?></a></noindex></p><p>  Scraped data is then transformed and can be downloaded. You can get the data in the format you need using the form below.</p><p>  As new stations appear from time to time and some unpopular stations get removed,  it makes sense to come back regularly to download a new list.</p><?php echo $this->downloadForm; ?><h3>How?</h3><p>    You can download the landmarks in two formats: an LDB file, which is  ready to use with your Nokia Maps (you need the <a href="http://store.ovi.com/content/42842">LmManager</a>  application to import the LDB file on your phone), or a common CSV file you can easily use for your own fun.</p><p>  For example, it is very easy to upload the downloaded CSV into  <a href="http://www.google.com/fusiontables/DataSource?dsrcid=224843">Google Fusion Tables</a> and then, say, visualise them  on a map in one click or get the  <a href="http://tables.googlelabs.com/exporttable?query=select+col0%2Ccol1%2Ccol2+from+224843+&o=kmllink&g=col1">KML</a> instantly.  </p><p>  <a href="#map" id="link_map_show">Click here to see the sample map</a></p><a name="map"></a><div id="map_container">  <!--  iframe attributes are not CSS'ed as that's a snippet received from Google - let's keep it as is  -->  <iframe border="0" width="500px" height="300px" scrolling="no"  src="http://tables.googlelabs.com/embedviz?viz=MAP&q=select+col0%2Ccol1%2Ccol2+from+224843+&h=false&lat=51.5038274976179&lng=-0.1373291015625&z=12&l=col1"></iframe>  <br/>  <a href="#map" id="link_map_hide">Hide map</a></div><h3>Source?</h3><p>  The functionality here is pretty simple, but the implementation is more complicated in order to serve as a sample of  Zend Framework usage. It's built in a way like it's something big and supposed to grow, but the first version of this app  was implemented in a single 150 strings long file (that's including the HTML blocks) - so the purpose of this bigger implementation  is to demostrate the code style and the approaches used.</p><p>  The source code is published on github and is free to use: <a href="https://github.com/yurri/BorisBikes-for-Nokia-Maps">https://github.com/yurri/BorisBikes-for-Nokia-Maps</a></p><p>  Cheers!</p>